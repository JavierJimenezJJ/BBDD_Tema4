--borro todos los insterts
DELETE FROM DESCUENTO;
DELETE FROM TRABAJADORES;
DELETE FROM CAMARERO;
DELETE FROM PRODUCTO;
DELETE FROM PROVEEDOR;

--Creamos las secuencias
CREATE SEQUENCE SEQ_CODIGO_PRODUCTOS
START WITH 10
INCREMENT BY 1;


CREATE SEQUENCE SEQ_CODIGO_CAMARERO
START WITH 1000
INCREMENT BY 1;

ALTER TABLE PRODUCTO MODIFY (FECHA_ENVASADO DATE);

--REHACEMOS TODOS LOS INSERTS CON LAS SECUENCIAS 

INSERT INTO DESCUENTO (CODIGO_DESCUENTO,PORCENTAJE,TIPO_EMPLEADO) VALUES('d022',22,'DOCTOR');
INSERT INTO DESCUENTO (CODIGO_DESCUENTO,PORCENTAJE,TIPO_EMPLEADO) VALUES('e020',20,'ENFERMERO');
INSERT INTO DESCUENTO (CODIGO_DESCUENTO,PORCENTAJE,TIPO_EMPLEADO) VALUES('x020',20,'AUXILIAR ENFERMERIA');
INSERT INTO DESCUENTO (CODIGO_DESCUENTO,PORCENTAJE,TIPO_EMPLEADO) VALUES('a015',15,'ADMINISTRATIVO');
INSERT INTO DESCUENTO (CODIGO_DESCUENTO,PORCENTAJE,TIPO_EMPLEADO) VALUES('c018',18,'CELADOR');

INSERT INTO TRABAJADORES (DNI,NOMBRE,PRAPELLIDO,SGAPELLIDO,NUM_COLEGIADO,COD_DESCUENTO) VALUES('93603385K','BELEN','LOPEZ','DIEZ',NULL,'a015');
INSERT INTO TRABAJADORES (DNI,NOMBRE,PRAPELLIDO,SGAPELLIDO,NUM_COLEGIADO,COD_DESCUENTO) VALUES('09927463L','PEDRO','TORRES',NULL,25641,'d022');
INSERT INTO TRABAJADORES (DNI,NOMBRE,PRAPELLIDO,SGAPELLIDO,NUM_COLEGIADO,COD_DESCUENTO) VALUES('71119803M','LUIS','GONZALEZ','SANCHEZ',NULL,'x020');
INSERT INTO TRABAJADORES (DNI,NOMBRE,PRAPELLIDO,SGAPELLIDO,NUM_COLEGIADO,COD_DESCUENTO) VALUES('31290982G','EVA','MARCOS','GONZALEZ',14587,'d022');
INSERT INTO TRABAJADORES (DNI,NOMBRE,PRAPELLIDO,SGAPELLIDO,NUM_COLEGIADO,COD_DESCUENTO) VALUES('71896442T','JAIME','SANCHEZ','ROMERO',36258,'e020');
INSERT INTO TRABAJADORES (DNI,NOMBRE,PRAPELLIDO,SGAPELLIDO,NUM_COLEGIADO,COD_DESCUENTO) VALUES('21964788D','DANIEL','GARCIA','GIL',NULL,'c018');
INSERT INTO TRABAJADORES (DNI,NOMBRE,PRAPELLIDO,SGAPELLIDO,NUM_COLEGIADO,COD_DESCUENTO) VALUES('96884452H','DAVID','MEDINA','ORTEGA',89345,'d022');
INSERT INTO TRABAJADORES (DNI,NOMBRE,PRAPELLIDO,SGAPELLIDO,NUM_COLEGIADO,COD_DESCUENTO) VALUES('71450369F','MIGUEL','PEREZ','SANZ',NULL,'c018');
INSERT INTO TRABAJADORES (DNI,NOMBRE,PRAPELLIDO,SGAPELLIDO,NUM_COLEGIADO,COD_DESCUENTO) VALUES('07894125S','MARTA','MUÑOZ','VILLA',NULL,'a015'); --SI DA ALGUN FALLO EN EL INSERT CAMBIAR MUÑOZ POR MUNOZ

INSERT INTO CAMARERO (CODIGO_CAMARERO, NOMBRE_USUARIO, TIPO_EMPLEADO, NOMBRE) VALUES (SEQ_CODIGO_CAMARERO.NEXTVAL, 'carlos55', 'ENCARGADO', 'CARLOS');
INSERT INTO CAMARERO (CODIGO_CAMARERO, NOMBRE_USUARIO, TIPO_EMPLEADO, NOMBRE) VALUES (SEQ_CODIGO_CAMARERO.NEXTVAL, 'javi61', 'CAMARERO', 'JAVI');
INSERT INTO CAMARERO (CODIGO_CAMARERO, NOMBRE_USUARIO, TIPO_EMPLEADO, NOMBRE) VALUES (SEQ_CODIGO_CAMARERO.NEXTVAL, 'laura60', 'JEFE DE TURNO', 'LAURA');
INSERT INTO CAMARERO (CODIGO_CAMARERO, NOMBRE_USUARIO, TIPO_EMPLEADO, NOMBRE) VALUES (SEQ_CODIGO_CAMARERO.NEXTVAL, 'sonia00', 'CAMARERO', 'SONIA');
INSERT INTO CAMARERO (CODIGO_CAMARERO, NOMBRE_USUARIO, TIPO_EMPLEADO, NOMBRE) VALUES (SEQ_CODIGO_CAMARERO.NEXTVAL, 'carmen63', 'CAMARERO', 'CARMEN');

INSERT INTO PROVEEDOR (CIF,NOMBRE,CODPROVEEDOR,CIUDAD,TELEFONO) VALUES('36422476K','CARREFOUR',11,'VALLADOLID','612345678');
INSERT INTO PROVEEDOR (CIF,NOMBRE,CODPROVEEDOR,CIUDAD,TELEFONO) VALUES('14207080A','SUMINISTROS GARCIA',12,'PALENCIA','622345679');
INSERT INTO PROVEEDOR (CIF,NOMBRE,CODPROVEEDOR,CIUDAD,TELEFONO) VALUES('44129632S','PANADERIA PUEBLA',26,'LEON','632345680');
INSERT INTO PROVEEDOR (CIF,NOMBRE,CODPROVEEDOR,CIUDAD,TELEFONO) VALUES('55503568Z','CAFES DEL MUNDO',32,'VALLADOLID','642345681');
INSERT INTO PROVEEDOR (CIF,NOMBRE,CODPROVEEDOR,CIUDAD,TELEFONO) VALUES('74483896Y','HNOS. RICO',56,'LEON','652345682');
INSERT INTO PROVEEDOR (CIF,NOMBRE,CODPROVEEDOR,CIUDAD,TELEFONO) VALUES('12603532E','HELADOS FRIGO',60,'SEGOVIA','662345683');


INSERT INTO PRODUCTO (CODIGO_PRODUCTO, NOMBRE_PRODUCTO, PRECIO, STOCK, CODPROVEEDOR, ALERGENOS, FECHA_ENVASADO) VALUES (SEQ_CODIGO_PRODUCTO.NEXTVAL, 'CROISSANT', 0.95, 35, 26, 'GLUTEN', NULL);
INSERT INTO PRODUCTO (CODIGO_PRODUCTO, NOMBRE_PRODUCTO, PRECIO, STOCK, CODPROVEEDOR, ALERGENOS, FECHA_ENVASADO) VALUES (SEQ_CODIGO_PRODUCTO.NEXTVAL, 'SANDWICH MIXTO', 1.75, 15, 11, 'GLUTEN', TO_DATE('2023-05-24', 'YYYY-MM-DD'));
INSERT INTO PRODUCTO (CODIGO_PRODUCTO, NOMBRE_PRODUCTO, PRECIO, STOCK, CODPROVEEDOR, ALERGENOS, FECHA_ENVASADO) VALUES (SEQ_CODIGO_PRODUCTO.NEXTVAL, 'MANZANA', 0.85, 50, 11, NULL, NULL);
INSERT INTO PRODUCTO (CODIGO_PRODUCTO, NOMBRE_PRODUCTO, PRECIO, STOCK, CODPROVEEDOR, ALERGENOS, FECHA_ENVASADO) VALUES (SEQ_CODIGO_PRODUCTO.NEXTVAL, 'TOSTADAS', 2.20, 90, 26, 'GLUTEN', NULL);
INSERT INTO PRODUCTO (CODIGO_PRODUCTO, NOMBRE_PRODUCTO, PRECIO, STOCK, CODPROVEEDOR, ALERGENOS, FECHA_ENVASADO) VALUES (SEQ_CODIGO_PRODUCTO.NEXTVAL, 'REFRESCO COLA', 2.15, 25, 56, NULL, TO_DATE('2023-04-20', 'YYYY-MM-DD'));
INSERT INTO PRODUCTO (CODIGO_PRODUCTO, NOMBRE_PRODUCTO, PRECIO, STOCK, CODPROVEEDOR, ALERGENOS, FECHA_ENVASADO) VALUES (SEQ_CODIGO_PRODUCTO.NEXTVAL, 'AGUA', 0.90, 120, 12, NULL, TO_DATE('2023-05-13', 'YYYY-MM-DD'));
INSERT INTO PRODUCTO (CODIGO_PRODUCTO, NOMBRE_PRODUCTO, PRECIO, STOCK, CODPROVEEDOR, ALERGENOS, FECHA_ENVASADO) VALUES (SEQ_CODIGO_PRODUCTO.NEXTVAL, 'INFUSION', 1.0, 60, 12, NULL, NULL);
INSERT INTO PRODUCTO (CODIGO_PRODUCTO, NOMBRE_PRODUCTO, PRECIO, STOCK, CODPROVEEDOR, ALERGENOS, FECHA_ENVASADO) VALUES (SEQ_CODIGO_PRODUCTO.NEXTVAL, 'CERVEZA', 1.6, 100, 56, NULL, TO_DATE('2023-03-12', 'YYYY-MM-DD'));
INSERT INTO PRODUCTO (CODIGO_PRODUCTO, NOMBRE_PRODUCTO, PRECIO, STOCK, CODPROVEEDOR, ALERGENOS, FECHA_ENVASADO) VALUES (SEQ_CODIGO_PRODUCTO.NEXTVAL, 'PATATAS FRITAS', 1.35, 50, 56, NULL, TO_DATE('2023-05-30', 'YYYY-MM-DD'));

ALTER TABLE VENTA DROP CONSTRAINT PK_VENTA;

ALTER TABLE VENTA ADD CONSTRAINT PK_VENTA PRIMARY KEY (NUM_TICKET);


--CREAMOS LA TABLA VENTAS
CREATE TABLE VENTAS(
PRECIO_TOTAL NUMBER(10,2),
CANTIDAD NUMBER(3),
NUM_TICKET NUMBER (6),
CODIGO_PRODUCTO NUMBER(3),
CONSTRAINT PK_VENTAS_PRODUCTOS PRIMARY KEY (NUM_TICKET, CODIGO_PRODUCTO),
CONSTRAINT FK_VENTAS_PRODUCTO20 FOREIGN KEY (CODIGO_PRODUCTO) REFERENCES PRODUCTO(CODIGO_PRODUCTO)
);


CREATE SEQUENCE SEQ_NUM_TICKET START WITH 1 INCREMENT BY 1; --creamos la secuencia para el ticket

--PROCEDIMIENTO


CREATE OR REPLACE PROCEDURE PROCESAR_VENTA(
    IN_COD_PRODUCTOS VARCHAR2,
    IN_DNI_TRABAJADOR VARCHAR2,
    IN_NOMBRE_USUARIO_CAMARERO VARCHAR2
) AS
V_COD_PRODUCTO VARCHAR2(2000); 
V_DNI_TRABAJADOR VARCHAR2(9); 
V_NOMBRE_USUARIO_CAMARERO VARCHAR2(50); 
V_CANTIDAD NUMBER(6) := 1; 
V_NUM_TICKET NUMBER(6); 
V_PRECIO_PRODUCTO NUMBER(10,2);
V_PRECIO_TOTAL NUMBER(10,2) := 0; 
V_STOCK NUMBER(3); 
V_DESCUENTO NUMBER(10,2); 
V_COD_EMPLEADO NUMBER(4); 
V_EXISTENCIA_TRABAJADOR NUMBER; 
V_EXISTENCIA_CAMARERO NUMBER;
CONTADOR_PRODUCTOS NUMBER; 
I NUMBER := 1; 
NO_EXISTE_TRABAJADOR EXCEPTION; 
NO_EXISTE_CAMARERO EXCEPTION; 
NO_STOCK EXCEPTION; 
BEGIN
    -- VALIDA EXISTENCIA DEL TRABAJADOR
SELECT COUNT(*)
INTO V_EXISTENCIA_TRABAJADOR
FROM TRABAJADORES
WHERE DNI = IN_DNI_TRABAJADOR;

IF V_EXISTENCIA_TRABAJADOR = 0 THEN
    RAISE NO_EXISTE_TRABAJADOR; --SI NO EXISTE EL TRABAJADOR TIRA ESTA EXCEPCION
END IF;

-- OBTENER EL PORCENTAJE DE DESCUENTO DEL TRABAJADOR
SELECT PORCENTAJE
INTO V_DESCUENTO
FROM DESCUENTO
WHERE CODIGO_DESCUENTO = (SELECT COD_DESCUENTO FROM TRABAJADORES WHERE DNI = IN_DNI_TRABAJADOR);

-- VALIDAR EXISTENCIA DEL CAMARERO
SELECT COUNT(*)
INTO V_EXISTENCIA_CAMARERO
FROM CAMARERO
WHERE NOMBRE_USUARIO = IN_NOMBRE_USUARIO_CAMARERO;

IF V_EXISTENCIA_CAMARERO = 0 THEN
    RAISE NO_EXISTE_CAMARERO; --SI NO EXISTE EL CAMARERO TIRA ESTA EXCEPCION
END IF;

-- OBTENER EL CODIGO DEL CAMARERO
SELECT CODIGO_CAMARERO
INTO V_COD_EMPLEADO
FROM CAMARERO
WHERE NOMBRE_USUARIO = IN_NOMBRE_USUARIO_CAMARERO;

-- GENERAR EL NUMERO DE TICKET MEDIANTE UNA SECUENCIA
SELECT SEQ_NUM_TICKET.NEXTVAL INTO V_NUM_TICKET FROM DUAL;

-- CUENTA EL NUMERO DE PRODUCTOS
CONTADOR_PRODUCTOS := LENGTH(IN_COD_PRODUCTOS) - LENGTH(REPLACE(IN_COD_PRODUCTOS, ',', '')) + 1;

-- INSERTS EN LA TABLA VENTA
IF CONTADOR_PRODUCTOS = 1 THEN
-- SI LA COMPRA ES UN SOLO PRODUCTO SOLO PRODUCTO
V_COD_PRODUCTO := IN_COD_PRODUCTOS;

-- CONFIRMAR STOCK DEL PRODUCTO
SELECT STOCK, PRECIO
INTO V_STOCK, V_PRECIO_PRODUCTO
FROM PRODUCTO
WHERE CODIGO_PRODUCTO = TO_NUMBER(V_COD_PRODUCTO);

IF V_STOCK < 1 THEN
    RAISE NO_STOCK;--SI NO HAY STOCK SALTA ESTA EXCEPCION
END IF;

-- OBTENER EL PRECIO DEL PRODUCTO
SELECT PRECIO
INTO V_PRECIO_PRODUCTO
FROM PRODUCTO
WHERE CODIGO_PRODUCTO = TO_NUMBER(V_COD_PRODUCTO);

-- CALCULAR PRECIO CON DESCUENTO
V_PRECIO_PRODUCTO := V_PRECIO_PRODUCTO * (1 - V_DESCUENTO / 100);

-- INSERTS EN LA TABLA VENTA
INSERT INTO VENTA (NUM_TICKET, DNI, COD_EMPLEADO, FECHA_VENTA, PRECIO, COD_PRODUCTO, CANTIDAD)
VALUES (V_NUM_TICKET, IN_DNI_TRABAJADOR, V_COD_EMPLEADO, SYSDATE, V_PRECIO_PRODUCTO, TO_NUMBER(V_COD_PRODUCTO), V_CANTIDAD);

-- INSERTAR EN LA TABLA VENTAS
INSERT INTO VENTAS (PRECIO_TOTAL, CANTIDAD, NUM_TICKET, CODIGO_PRODUCTO)
VALUES (V_PRECIO_PRODUCTO, V_CANTIDAD, V_NUM_TICKET, TO_NUMBER(V_COD_PRODUCTO));

-- REDUCIR EL STOCK DEL PRODUCTO
UPDATE PRODUCTO
SET STOCK = STOCK - 1
WHERE CODIGO_PRODUCTO = TO_NUMBER(V_COD_PRODUCTO);

ELSE
-- CASO CON VARIOS PRODUCTOS
FOR I IN 1 .. CONTADOR_PRODUCTOS LOOP
V_COD_PRODUCTO := REGEXP_SUBSTR(IN_COD_PRODUCTOS, '[^,]+', 1, I);

-- COMPROBAR STOCK
SELECT STOCK, PRECIO
INTO V_STOCK, V_PRECIO_PRODUCTO
FROM PRODUCTO
WHERE CODIGO_PRODUCTO = TO_NUMBER(V_COD_PRODUCTO);

IF V_STOCK < 1 THEN
    RAISE NO_STOCK;
END IF;

-- OBTENER EL PRECIO DEL PRODUCTO
SELECT PRECIO
INTO V_PRECIO_PRODUCTO
FROM PRODUCTO
WHERE CODIGO_PRODUCTO = TO_NUMBER(V_COD_PRODUCTO);

-- CALCULAMOS PRECIO CON DESCUENTO
V_PRECIO_PRODUCTO := V_PRECIO_PRODUCTO * (1 - V_DESCUENTO / 100);

-- INSERTS EN LA TABLA VENTAS
INSERT INTO VENTAS (PRECIO_TOTAL, CANTIDAD, NUM_TICKET, CODIGO_PRODUCTO)
VALUES (V_PRECIO_PRODUCTO, V_CANTIDAD, V_NUM_TICKET, TO_NUMBER(V_COD_PRODUCTO));

-- REDUCIR EL STOCK DEL PRODUCTO QUE SE HAYA VENDIDO
UPDATE PRODUCTO
SET STOCK = STOCK - 1
WHERE CODIGO_PRODUCTO = TO_NUMBER(V_COD_PRODUCTO);

-- SUMAR EL PRECIO PARA EL TOTAL
V_PRECIO_TOTAL := V_PRECIO_TOTAL + V_PRECIO_PRODUCTO;
END LOOP;

-- INSERTAR EN LA TABLA VENTA
INSERT INTO VENTA (NUM_TICKET, DNI, COD_EMPLEADO, FECHA_VENTA, PRECIO, COD_PRODUCTO, CANTIDAD)
VALUES (V_NUM_TICKET, IN_DNI_TRABAJADOR, V_COD_EMPLEADO, SYSDATE, V_PRECIO_TOTAL, TO_NUMBER(V_COD_PRODUCTO), V_CANTIDAD);
END IF;

    
--TRATAMIENTO DE EXCEPCIONES
EXCEPTION
WHEN NO_EXISTE_TRABAJADOR THEN
    DBMS_OUTPUT.PUT_LINE('ESA PERSONA NO ESTA REGISTRADA COMO TRABAJADOR');
WHEN NO_EXISTE_CAMARERO THEN
    DBMS_OUTPUT.PUT_LINE('ESA PERSONA NO ESTA REGISTRADA COMO CAMARERO');
WHEN NO_STOCK THEN
    DBMS_OUTPUT.PUT_LINE('NO QUEDA STOCK DE ESE PRODUCTO');
WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('ERROR');
END PROCESAR_VENTA;






--TESTING
SET SERVEROUTPUT ON;
--CASO 1
BEGIN
    PROCESAR_VENTA('11', '93603385K', 'carlos55');
END;

SELECT * FROM VENTA;
SELECT * FROM VENTAS;

--CASO 2
BEGIN
    PROCESAR_VENTA('09,10', '93603385K', 'carlos55');
END;

--CONSULTAS PARA VER LOS INSERTS
SELECT * FROM VENTA;
SELECT * FROM VENTAS;


--CASO 3
BEGIN
    PROCESAR_VENTA(NULL, '93603385K', 'carlos55');
END;

--CASO 4 EXCECION PERSONALIZADA
BEGIN
    PROCESAR_VENTA('11', '93603385K', 'PACO45');
END;
DELETE FROM VENTA;
DELETE FROM VENTAS;

