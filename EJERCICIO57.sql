CREATE TABLE productos (
  id NUMBER(3) PRIMARY KEY,
  nombre VARCHAR2(100) NOT NULL,
  precio  NUMBER(6,2) NOT NULL,
  id_fabricante NUMBER(3) NOT NULL,
  FOREIGN KEY (id_fabricante) REFERENCES fabricantes(id)
);


CREATE TABLE fabricantes (
  id NUMBER(3) PRIMARY KEY,
  nombre VARCHAR2(100) NOT NULL
);

INSERT INTO productos VALUES(1, 'Disco duro SATA3 1TB', 86.99, 5);
INSERT INTO productos VALUES(2, 'Memoria RAM DDR4 8GB', 120, 6);
INSERT INTO productos VALUES(3, 'Disco SSD 1 TB', 150.99, 4);
INSERT INTO productos VALUES(4, 'GeForce GTX 1050Ti', 185, 7);
INSERT INTO productos VALUES(5, 'GeForce GTX 1080 Xtreme', 755, 6);
INSERT INTO productos VALUES(6, 'Monitor 24 LED Full HD', 202, 1);
INSERT INTO productos VALUES(7, 'Monitor 27 LED Full HD', 245.99, 1);
INSERT INTO productos VALUES(8, 'Portátil Yoga 520', 559, 2);
INSERT INTO productos VALUES(9, 'Portátil Ideapd 320', 444, 2);
INSERT INTO productos VALUES(10, 'Impresora HP Deskjet 3720', 59.99, 3);
INSERT INTO productos VALUES(11, 'Impresora HP Laserjet Pro M26nw', 180, 3);

INSERT INTO fabricantes VALUES(1, 'Asus');
INSERT INTO fabricantes VALUES(2, 'Lenovo');
INSERT INTO fabricantes VALUES(3, 'Hewlett-Packard');
INSERT INTO fabricantes VALUES(4, 'Samsung');
INSERT INTO fabricantes VALUES(5, 'Seagate');
INSERT INTO fabricantes VALUES(6, 'Crucial');
INSERT INTO fabricantes VALUES(7, 'Gigabyte');
INSERT INTO fabricantes VALUES(8, 'Huawei');
INSERT INTO fabricantes VALUES(9, 'Xiaomi');

--------------------------------------------------------------------------------

--A
SELECT NOMBRE
FROM PRODUCTOS;

--B

--C
SELECT UPPER(NOMBRE), PRECIO
FROM PRODUCTOS;

--D
SELECT LOWER(NOMBRE),PRECIO
FROM PRODUCTOS;

--E
SELECT NOMBRE ,ROUND(PRECIO,0)
FROM PRODUCTOS;

--F
SELECT NOMBRE, TRUNC(PRECIO,0)
FROM PRODUCTOS;

--G
SELECT F.NOMBRE, P.PRECIO
FROM FABRICANTES F
JOIN PRODUCTOS P ON F.ID = P.ID;

--H
SELECT DISTINCT P.ID_FABRICANTE, F.NOMBRE
FROM PRODUCTOS P
JOIN FABRICANTES F ON P.ID_FABRICANTE = F.ID;

--I
SELECT NOMBRE 
FROM FABRICANTES
ORDER BY NOMBRE ASC;

--J
SELECT nombre, precio
FROM (
    SELECT nombre, precio
    FROM productos
    ORDER BY precio DESC
)
WHERE ROWNUM = 1;



--K
SELECT *
FROM PRODUCTOS
WHERE PRECIO >= 400;

--L
SELECT *
FROM PRODUCTOS
WHERE PRECIO <= 400;

--M
SELECT * 
FROM PRODUCTOS 
WHERE PRECIO BETWEEN 80 AND 300;

--N
SELECT * 
FROM PRODUCTOS 
WHERE PRECIO BETWEEN 60 AND 200;

--O
SELECT *
FROM PRODUCTOS 
WHERE ID_FABRICANTE = 6;

--P
SELECT *
FROM PRODUCTOS 
WHERE ID_FABRICANTE IN (1,3,5);

--Q
SELECT *
FROM FABRICANTES 
WHERE NOMBRE LIKE ('S%');

--R
SELECT * 
FROM FABRICANTES 
WHERE UPPER(NOMBRE) LIKE ('%E');

--S
SELECT *
FROM FABRICANTES
WHERE UPPER(NOMBRE) LIKE ('%W%');

--------------------------------------------------------------------------------

-- CONSULTAS MULTITABLA 
--1
SELECT P.NOMBRE, P.PRECIO,F.NOMBRE AS NOMBRE_FABRICANTE
FROM PRODUCTOS P
JOIN FABRICANTES F ON P.ID_FABRICANTE = F.ID;

--2
SELECT P.NOMBRE, P.PRECIO,F.NOMBRE AS NOMBRE_FABRICANTE
FROM PRODUCTOS P
JOIN FABRICANTES F ON P.ID_FABRICANTE = F.ID
ORDER BY F.NOMBRE ASC;

--3
SELECT P.ID, P.NOMBRE, F.ID, F.NOMBRE AS NOMBRE_FABRICANTE
FROM PRODUCTOS P
JOIN FABRICANTES F ON P.ID_FABRICANTE = F.ID;

--4
SELECT P.NOMBRE, P.PRECIO, F.NOMBRE AS NOMBRE_FABRICANTE
FROM PRODUCTOS P
JOIN FABRICANTES F ON P.ID_FABRICANTE = F.ID
WHERE P.PRECIO = (SELECT MIN(PRECIO) FROM PRODUCTOS);

--5
SELECT P.NOMBRE,P.PRECIO, F.NOMBRE AS NOMBRE_FABRICANTE
FROM PRODUCTOS P
JOIN FABRICANTES F ON P.ID_FABRICANTE = F.ID
WHERE P.PRECIO = (SELECT MAX(PRECIO) FROM PRODUCTOS);

--6
SELECT *
FROM PRODUCTOS P 
JOIN FABRICANTES F ON P.ID_FABRICANTE = F.ID
WHERE UPPER(F.NOMBRE) = ('LENOVO');

--7
SELECT * 
FROM PRODUCTOS P
JOIN FABRICANTES F ON P.ID_FABRICANTE = F.ID
WHERE UPPER(F.NOMBRE) = ('CRUCIAL')
AND P.PRECIO < 200;

--8
SELECT *
FROM PRODUCTOS P
JOIN FABRICANTES F ON P.ID_FABRICANTE = F.ID
WHERE F.NOMBRE = ('Asus')
OR F.NOMBRE = ('Hewlett-Packard')
OR F.NOMBRE = ('Seagate');

--9
SELECT *
FROM PRODUCTOS P
JOIN FABRICANTES F ON P.ID_FABRICANTE = F.ID
WHERE F.NOMBRE IN ('Asus', 'Hewlett-Packard','Seagate');

--10 
SELECT P.NOMBRE, P.PRECIO, F.NOMBRE
FROM PRODUCTOS P
JOIN FABRICANTES F ON P.ID_FABRICANTE = F.ID
WHERE F.NOMBRE LIKE ('%e');

--11
SELECT P.NOMBRE, P.PRECIO, F.NOMBRE
FROM PRODUCTOS P
JOIN FABRICANTES F ON P.ID_FABRICANTE = F.ID
WHERE F.NOMBRE LIKE ('%w%');

--12
SELECT *
FROM PRODUCTOS P
JOIN FABRICANTES F ON P.ID_FABRICANTE = F.ID
WHERE P.PRECIO >= 180
ORDER BY P.PRECIO DESC,P.NOMBRE ASC;

--------------------------------------------------------------------------------
CONSULTAS MULTITABLA COMPOSICION EXTERNA
--A

--B

--C

--------------------------------------------------------------------------------
CONSULTAS RESUMEN
--1
SELECT COUNT(*)
FROM PRODUCTOS;

--2
SELECT COUNT(DISTINCT ID_FABRICANTE)
FROM PRODUCTOS;

--3
SELECT AVG(PRECIO)
FROM PRODUCTOS;

--4
SELECT MIN(PRECIO)
FROM PRODUCTOS;

--5
SELECT MAX(PRECIO),NOMBRE
FROM PRODUCTOS
GROUP BY NOMBRE;

--6
SELECT SUM(PRECIO)
FROM PRODUCTOS;

--7
SELECT COUNT(*)
FROM PRODUCTOS P
JOIN FABRICANTES F ON P.ID_FABRICANTE= F.ID
WHERE F.NOMBRE =('Asus');

--8
SELECT AVG(PRECIO)
FROM PRODUCTOS P
JOIN FABRICANTES F ON P.ID_FABRICANTE= F.ID
WHERE F.NOMBRE =('Asus');

--9
SELECT MIN(PRECIO)
FROM PRODUCTOS P
JOIN FABRICANTES F ON P.ID_FABRICANTE = F.ID
WHERE F.NOMBRE = ('Asus');

--10
SELECT MAX(PRECIO)
FROM PRODUCTOS P
JOIN FABRICANTES F ON P.ID_FABRICANTE = F.ID
WHERE F.NOMBRE = ('Asus');

--11
SELECT SUM (PRECIO)
FROM PRODUCTOS P
JOIN FABRICANTES F ON P.ID_FABRICANTE = F.ID
WHERE F.NOMBRE = ('Asus');


--12
SELECT MIN(PRECIO) , MAX(PRECIO) , AVG(PRECIO), COUNT (*)
FROM PRODUCTOS P
JOIN FABRICANTES F ON P.ID_FABRICANTE = F.ID
WHERE F.NOMBRE = ('Crucial');


--13
SELECT F.NOMBRE AS Fabricante, COUNT(P.ID) AS Total_Productos
FROM FABRICANTES F
JOIN PRODUCTOS P ON F.ID = P.ID_FABRICANTE
GROUP BY F.NOMBRE;

--14
SELECT F.NOMBRE AS Fabricante, MAX(P.PRECIO), MIN (P.PRECIO), AVG(P.PRECIO)
FROM FABRICANTES F
JOIN PRODUCTOS P ON F.ID = P.ID_FABRICANTE
GROUP BY F.NOMBRE;

--15
SELECT F.NOMBRE AS Fabricante, MAX(P.PRECIO), MIN (P.PRECIO), AVG(P.PRECIO)
FROM FABRICANTES F
JOIN PRODUCTOS P ON F.ID = P.ID_FABRICANTE
GROUP BY F.NOMBRE
HAVING AVG(PRECIO) >= 200;

--16 
SELECT COUNT(*)
FROM PRODUCTOS
WHERE PRECIO >= 180;

--18
SELECT COUNT(*)
FROM FABRICANTES F
JOIN PRODUCTOS P ON F.ID = P.ID_FABRICANTE
WHERE PRECIO >= 180
GROUP BY F.NOMBRE;

--19
SELECT F.ID, AVG(P.PRECIO) AS PrecioMedio
FROM FABRICANTES F
JOIN PRODUCTOS P ON F.ID = P.ID_FABRICANTE
GROUP BY F.ID;

--20
SELECT F.NOMBRE AS Fabricante, AVG(P.PRECIO)
FROM FABRICANTES F
JOIN PRODUCTOS P ON F.ID = P.ID_FABRICANTE
GROUP BY F.NOMBRE;

--21
SELECT F.NOMBRE,AVG(PRECIO)
FROM FABRICANTES F
JOIN PRODUCTOS P ON F.ID = P.ID_FABRICANTE
GROUP BY F.NOMBRE;

--22
SELECT F.NOMBRE, AVG(P.PRECIO) AS MEDIAPRECIO
FROM FABRICANTES F
JOIN PRODUCTOS P ON F.ID = P.ID_FABRICANTE
GROUP BY F.NOMBRE
ORDER BY F.NOMBRE ASC;

--------------------------------------------------------------------------------
--SUBCONSULTAS


--1
SELECT *
FROM PRODUCTOS
WHERE ID_FABRICANTE = (
    SELECT ID
    FROM FABRICANTES
    WHERE NOMBRE = 'Lenovo'
);


--2
SELECT *
FROM PRODUCTOS
WHERE PRECIO  = (SELECT MAX(PRECIO) FROM PRODUCTOS WHERE ID_FABRICANTE = (SELECT ID FROM FABRICANTES WHERE NOMBRE = 'Lenovo'));


--3
SELECT NOMBRE
FROM PRODUCTOS 
WHERE PRECIO  = (SELECT MAX(PRECIO) FROM PRODUCTOS WHERE ID_FABRICANTE = (SELECT ID FROM FABRICANTES WHERE NOMBRE = 'Lenovo'))


--4
SELECT NOMBRE
FROM PRODUCTOS
WHERE PRECIO = (SELECT MIN(PRECIO)FROM PRODUCTOS WHERE ID_FABRICANTE =(SELECT ID FROM FABRICANTES WHERE NOMBRE = 'Hewlett-Packard'))

--5
SELECT *
FROM PRODUCTOS
WHERE PRECIO  >= (SELECT MAX(PRECIO) FROM PRODUCTOS WHERE ID_FABRICANTE = (SELECT ID FROM FABRICANTES WHERE NOMBRE = 'Lenovo'));

--6
SELECT *
FROM PRODUCTOS
WHERE PRECIO > (SELECT AVG(PRECIO) FROM PRODUCTOS WHERE ID_FABRICANTE = (SELECT ID FROM FABRICANTES WHERE NOMBRE ='Asus'));

--------------------------------------------------------------------------------
--SUBCONSULTAS ALL Y ANY 

--7
SELECT *
FROM PRODUCTOS 
WHERE PRECIO >= ALL(SELECT PRECIO FROM PRODUCTOS);

--8
SELECT *
FROM PRODUCTOS 
WHERE PRECIO <=ALL (SELECT PRECIO FROM PRODUCTOS);

--9
SELECT *
FROM PRODUCTOS 
WHERE ID_FABRICANTE = ANY(SELECT ID FROM FABRICANTES)
ORDER BY NOMBRE;

--10
SELECT *
FROM PRODUCTOS 
WHERE ID_FABRICANTE != ANY(SELECT ID FROM FABRICANTES)
ORDER BY NOMBRE;

--------------------------------------------------------------------------------
--IN / NOT IN 

--11
SELECT NOMBRE
FROM FABRICANTES
WHERE ID IN (SELECT DISTINCT ID_FABRICANTE FROM PRODUCTOS);

--12
SELECT NOMBRE 
FROM FABRICANTES 
WHERE ID NOT IN (SELECT ID_FABRICANTE FROM PRODUCTOS);

--------------------------------------------------------------------------------
-- EXISTS / NOT EXISTS


--14

SELECT NOMBRE 
FROM FABRICANTES 
WHERE EXISTS (SELECT * FROM PRODUCTOS WHERE ID_FABRICANTE = FABRICANTES.ID);

--15
SELECT NOMBRE 
FROM FABRICANTES 
WHERE NOT EXISTS (SELECT * FROM PRODUCTOS WHERE ID_FABRICANTE = FABRICANTES.ID);

--------------------------------------------------------------------------------
--CORRELACIONADAS
--16
SELECT F.NOMBRE , P.NOMBRE , P.PRECIO 
FROM FABRICANTES F
JOIN PRODUCTOS P ON F.ID = P.ID_FABRICANTE
WHERE (P.ID_FABRICANTE, P.PRECIO) IN (SELECT ID_FABRICANTE, MAX(PRECIO) FROM PRODUCTOS GROUP BY ID_FABRICANTE);

--17
SELECT P.id, P.nombre, P.precio, P.id_fabricante
FROM productos P
WHERE P.precio >= (SELECT AVG(P2.precio) FROM productos P2 WHERE P2.id_fabricante = P.id_fabricante);

--------------------------------------------------------------------------------
--HAVING

--18





